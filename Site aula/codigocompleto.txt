<!DOCTYPE html>
<html lang="pt-BR">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Meu Quarto Virtual</title>

  <!-- CSS embutido e desativado por padr√£o -->
  <style id="main-style" disabled>
    body {
      font-family: Arial, sans-serif;
      max-width: 600px;
      margin: 0 auto;
      padding: 20px;
      background-color: #f5f5f5;
      transition: all 0.8s ease;
    }

    .css-activation {
      animation: cssActivation 1.5s ease-out;
    }

    @keyframes cssActivation {
      0% {
        opacity: 0;
        transform: scale(0.8);
        filter: blur(10px);
      }
      50% {
        opacity: 0.7;
        transform: scale(1.05);
        filter: blur(5px);
      }
      100% {
        opacity: 1;
        transform: scale(1);
        filter: blur(0);
      }
    }

    h1 {
      color: #333;
      text-align: center;
    }

    ul {
      list-style: none;
      padding: 0;
    }

    li {
      background: white;
      margin: 10px 0;
      padding: 15px;
      border-radius: 8px;
      box-shadow: 0 2px 4px rgba(0,0,0,0.1);
      font-size: 18px;
      transition: all 0.3s ease;
    }

    li:hover {
      transform: translateY(-2px);
      box-shadow: 0 4px 8px rgba(0,0,0,0.15);
    }

    .buying-animation {
      animation: buyingPulse 0.6s ease-in-out;
      background: linear-gradient(45deg, #ff6b6b, #ffd93d, #6bcf7f, #4d94ff);
      background-size: 300% 300%;
      animation: buyingPulse 0.6s ease-in-out, rainbow 2s linear infinite;
    }

    @keyframes buyingPulse {
      0% { transform: scale(1); }
      50% { transform: scale(1.1) rotate(2deg); }
      100% { transform: scale(1); }
    }

    @keyframes rainbow {
      0% { background-position: 0% 50%; }
      50% { background-position: 100% 50%; }
      100% { background-position: 0% 50%; }
    }

    .converted {
      font-size: 24px;
      text-align: center;
      animation: emojiPop 0.5s ease-out;
    }

    @keyframes emojiPop {
      0% {
        transform: scale(0) rotate(180deg);
        opacity: 0;
      }
      70% {
        transform: scale(1.2) rotate(-10deg);
        opacity: 1;
      }
      100% {
        transform: scale(1) rotate(0deg);
        opacity: 1;
      }
    }

    button {
      background-color: #4CAF50;
      color: white;
      padding: 12px 24px;
      border: none;
      border-radius: 5px;
      cursor: pointer;
      font-size: 16px;
      margin: 20px 0;
      transition: background-color 0.3s;
    }

    button:hover {
      background-color: #45a049;
    }

    .controls {
      text-align: center;
      margin: 20px 0;
    }

    .controls button {
      margin: 0 10px;
    }

    .explanation {
      background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
      color: white;
      padding: 20px;
      border-radius: 10px;
      margin: 20px 0;
    }

    .explanation h2 {
      margin-top: 0;
      color: #fff;
    }

    .explanation p {
      margin: 10px 0;
      line-height: 1.6;
    }

    .no-css-warning {
      background: #ff6b6b;
      color: white;
      padding: 10px;
      border-radius: 5px;
      margin: 10px 0;
      text-align: center;
      font-weight: bold;
    }
  </style>
</head>
<body>
  <noscript>
    <div style="background: #ff6b6b; color: white; padding: 10px; text-align: center;">
      ‚ö†Ô∏è JavaScript est√° desabilitado - os bot√µes n√£o funcionar√£o! ‚ö†Ô∏è
    </div>
  </noscript>

  <div id="css-warning" class="no-css-warning">
    ‚ö†Ô∏è CSS DESABILITADO - Voc√™ est√° vendo apenas HTML puro! ‚ö†Ô∏è
  </div>

  <h1>Este √© o meu quarto virtual</h1>

  <ul>
    <li class="cama" data-original="cama (li)">cama (li)</li>
    <li class="guarda-roupa" data-original="guarda-roupa (li)">guarda-roupa (li)</li>
    <li class="armario" data-original="armario (li)">armario (li)</li>
  </ul>

  <div class="controls">
    <button id="toggleCssBtn">üé® Ativar CSS</button>
    <button id="converteBtn">üõí Simular compra</button>
    <button id="resetBtn" style="display: none;">‚Ü©Ô∏è Voltar ao original</button>
  </div>

  <div class="explanation">
    <h2>üí° Explica√ß√£o Educativa:</h2>
    <p><strong>HTML:</strong> Estrutura do conte√∫do.</p>
    <p><strong>CSS:</strong> Apar√™ncia visual (est√° desativado inicialmente).</p>
    <p><strong>JavaScript:</strong> Intera√ß√µes e anima√ß√µes.</p>
  </div>

  <script>
    let cssEnabled = false;
    let isConverted = false;

    const emojiMap = {
      'cama': 'üõèÔ∏è',
      'guarda-roupa': 'üö™',
      'armario': 'üóÑÔ∏è'
    };

    function toggleCSS() {
      const css = document.getElementById('main-style');
      const warning = document.getElementById('css-warning');
      const toggleBtn = document.getElementById('toggleCssBtn');

      if (!cssEnabled) {
        css.disabled = false;
        document.body.classList.add('css-activation');
        if (warning) warning.remove();
        toggleBtn.textContent = 'üé® Desativar CSS';
        cssEnabled = true;
      } else {
        css.disabled = true;
        if (!document.getElementById('css-warning')) {
          const warningDiv = document.createElement('div');
          warningDiv.id = 'css-warning';
          warningDiv.className = 'no-css-warning';
          warningDiv.textContent = '‚ö†Ô∏è CSS DESABILITADO - Voc√™ est√° vendo apenas HTML puro! ‚ö†Ô∏è';
          document.body.insertBefore(warningDiv, document.body.firstChild);
        }
        toggleBtn.textContent = 'üé® Ativar CSS';
        cssEnabled = false;
      }
    }

    function convertToEmojis() {
      const items = document.querySelectorAll('li');

      items.forEach((li, index) => {
        setTimeout(() => {
          li.classList.add('buying-animation');
          setTimeout(() => {
            const emoji = emojiMap[li.className.replace(' buying-animation', '')];
            if (emoji) {
              li.textContent = emoji;
              li.classList.remove('buying-animation');
              li.classList.add('converted');
            }
          }, 600);
        }, index * 200);
      });

      setTimeout(() => {
        document.getElementById('converteBtn').style.display = 'none';
        document.getElementById('resetBtn').style.display = 'inline-block';
        isConverted = true;
      }, document.querySelectorAll('li').length * 200 + 600);
    }

    function resetToOriginal() {
      const items = document.querySelectorAll('li');
      items.forEach(li => {
        const originalText = li.getAttribute('data-original');
        if (originalText) {
          li.textContent = originalText;
          li.classList.remove('converted', 'buying-animation');
        }
      });

      document.getElementById('converteBtn').style.display = 'inline-block';
      document.getElementById('resetBtn').style.display = 'none';
      isConverted = false;
    }

    document.getElementById('toggleCssBtn').addEventListener('click', toggleCSS);
    document.getElementById('converteBtn').addEventListener('click', convertToEmojis);
    document.getElementById('resetBtn').addEventListener('click', resetToOriginal);
  </script>
</body>
</html>
